name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting (if available)
      run: npm run lint || echo "No linting script found"
      continue-on-error: true
    
    - name: Run tests with coverage
      run: npm run test:ci
      env:
        NODE_ENV: test
        PRODUCTBOARD_API_TOKEN: test-token
    
    - name: Check coverage threshold
      run: |
        if [ -f coverage/coverage-summary.json ]; then
          echo "Coverage report found"
          node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            console.log('Coverage Summary:');
            console.log('Lines:', total.lines.pct + '%');
            console.log('Statements:', total.statements.pct + '%');
            console.log('Functions:', total.functions.pct + '%');
            console.log('Branches:', total.branches.pct + '%');
            
            const threshold = 90;
            const failed = [];
            if (total.lines.pct < threshold) failed.push('Lines: ' + total.lines.pct + '%');
            if (total.statements.pct < threshold) failed.push('Statements: ' + total.statements.pct + '%');
            if (total.functions.pct < threshold) failed.push('Functions: ' + total.functions.pct + '%');
            if (total.branches.pct < threshold) failed.push('Branches: ' + total.branches.pct + '%');
            
            if (failed.length > 0) {
              console.error('‚ùå Coverage below threshold (90%):');
              failed.forEach(f => console.error('  ' + f));
              process.exit(1);
            } else {
              console.log('‚úÖ All coverage metrics above 90%');
            }
          "
        else
          echo "No coverage summary found"
        fi
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.node-version == '18.x'
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: true
      continue-on-error: true
    
    - name: Archive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          coverage/
          test-results.xml
    
    - name: Comment PR with coverage
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && matrix.node-version == '18.x'
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('coverage/coverage-summary.json')) {
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            
            const comment = `## üìä Test Coverage Report
            
            | Metric | Coverage |
            |--------|----------|
            | Lines | ${total.lines.pct}% |
            | Statements | ${total.statements.pct}% |
            | Functions | ${total.functions.pct}% |
            | Branches | ${total.branches.pct}% |
            
            ${total.lines.pct >= 90 && total.statements.pct >= 90 && total.functions.pct >= 90 && total.branches.pct >= 90 ? '‚úÖ All metrics above 90% threshold' : '‚ùå Some metrics below 90% threshold'}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application (if build script exists)
      run: npm run build || echo "No build script found"
      continue-on-error: true
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-artifacts
        path: |
          dist/
          build/
      continue-on-error: true